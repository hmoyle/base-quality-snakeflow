

include: "rules/common.smk"


rule all:
  input:
    safs=ALLBAT
    
rule index_fasta:
  input:
    genome=config["genome"]
  output:
    fai=config["genome"] + ".fai"
  log:
    "results/logs/index-fasta/log.txt"
  conda:
    "envs/samtools.yaml"
  benchmark:
    "results/benchmarks/index_fasta/log.txt"
  shell:
    " samtools faidx {input.genome} 2> {log}"



rule calc_saf:
  input:
    genome=config["genome"],
    fai=config["genome"] + ".fai",
    bam="data/{samp}.bam"
  output:
    saf="results/{mode}/{chunk}/saf/{samp}.saf.idx"
  params:
    bf=config["params"]["angsd_bam_filters"],
    cs=config["params"]["calc_saf"],
    chunk_opt=get_chunk
  threads: 1
  conda:
    "envs/angsd.yaml"
  log:
    "results/logs/calc_saf/{mode}/{chunk}/{samp}.txt"
  benchmark:
    "results/benchmarks/calc_saf/{mode}/{chunk}/{samp}.txt"
  shell:
    " PREFIX=$(echo {output.saf} | sed 's/\.saf\.idx$//g;');"
    " angsd -b {input.bam} -nThreads {threads} -anc {input.genome} {params.chunk_opt} "
    " -ref {input.genome} -out $PREFIX {params.cs} {params.bf} > {log} 2>&1 "
    
  

rule calc_sfs:
  input:
    saf="results/{mode}/{chunk}/saf/{samp}.saf.idx"
  output:
    sfs="results/{mode}/{chunk}/sfs/{samp}.ml"
  params:
    rs=config["params"]["realSFS"],
    chunk_opt=get_chunk
  conda:
    "envs/angsd.yaml"
  log:
    "results/logs/calc_sfs/{mode}/{chunk}/{samp}.txt"
  benchmark:
    "results/benchmarks/calc_sfs/{mode}/{chunk}/{samp}.txt"
  shell:
    " realSFS -cores {threads} {params.rs} {params.chunk_opt} {input.saf} > {output.sfs} 2> {log} "